// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  accounts      Account[]

  teacher_id Teacher[]
  admin_id   Administrator[]

  @@map("users")
}

model Teacher {
  id       String @unique
  name     String
  lastname String
  dni      BigInt

  user_id User @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Course {
  id       Int    @id @unique @default(autoincrement())
  course   Int
  division Int
  cycle    String

  student_course Student[]
}

model Student {
  id         String @unique
  name       String
  lastname   String
  dni        BigInt
  age        Int
  tutor_name String
  tutor_dni  BigInt
  id_course  Int

  user_course Course @relation(fields: [id_course], references: [id], onUpdate: Cascade)
}

model Administrator {
  id       String @unique
  name     String
  lastname String

  user_id User @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}
