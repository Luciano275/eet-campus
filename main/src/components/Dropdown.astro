---

interface Props {
  mobile?: boolean;
  label: string;
}

const { mobile, label } = Astro.props;

---

{ mobile ? (
<details class={`dropdown`}>
  <summary
    class={`m-1 flex gap-2 ${mobile && 'text-center py-1'} text-white hover:text-blue-400`}
  >
    {label}
    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
      <path stroke-linecap="round" stroke-linejoin="round" d="m19.5 8.25-7.5 7.5-7.5-7.5" />
    </svg>
  </summary>

  <slot />
</details>
) : (
<div class={`dropdown dropdown-hover`}>
  <div
    tabindex="0"
    role="button"
    class={`dropdown-container text-lg flex gap-2 ${mobile && 'text-center py-1'} text-white hover:text-blue-400`}
  >
    {label}
    <span class="transition-all">
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
        <path stroke-linecap="round" stroke-linejoin="round" d="m19.5 8.25-7.5 7.5-7.5-7.5" />
      </svg>
    </span>
  </div>

  <slot />
</div>
) }

<style>
  .dropdown-hover:hover span {
    rotate: 180deg;
  }
</style>