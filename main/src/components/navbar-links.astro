---
import Dropdown from './Dropdown.astro';

type LinksType =
  | {
      href: string;
      label: string;
      type: "normal";
    }
  | {
      type: "dropdown";
      label: string;
      options: {
        href: string;
        label: string;
      }[];
    };

interface Props {
  mobile?: boolean;
}

const LINKS: LinksType[] = [
  { href: "/", label: "Inicio", type: "normal" },
  {
    label: "Especialidades",
    type: "dropdown",
    options: [
      { href: "#informatic", label: "Informáctica" },
      { href: "#electronic", label: "Electrónica" },
    ],
  },
  {
    label: "Capacitaciones",
    type: "dropdown",
    options: [
      { href: "#informatic", label: "Informáctica" },
      { href: "#electronic", label: "Electrónica" },
      { href: "#electricity", label: "Electricidad" },
      { href: "#robotics", label: "Robótica" },
    ],
  },
];

const pathname = Astro.url.pathname;

const { mobile } = Astro.props;
---

<div class={mobile ? 'flex md:hidden flex-col' : "hidden md:flex justify-center gap-x-3 items-center"}>
  {
    LINKS.map((link) =>
      link.type === "normal" ? (
        <a href={link.href} class={`text-lg ${mobile && 'text-center py-1'} ${pathname === link.href ? 'text-blue-400' : 'text-white hover:text-blue-400'}`}>{link.label}</a>
      ) : (
        <Dropdown label={link.label} mobile={mobile}>
          <ul
            class="dropdown-content gap-1 bg-gray-800 text-white menu rounded-box z-[1] w-52 p-2 shadow"
          >
            {link.options.map((item) => (
              <a aria-label={item.label} href={item.href} class={`p-2 hover:bg-blue-800 rounded-lg ${pathname === item.href && 'bg-blue-800'}`}>
                {item.label}
              </a>
            ))}
          </ul>
        </Dropdown>
      )
    )
  }
</div>